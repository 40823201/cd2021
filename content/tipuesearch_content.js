var tipuesearch = {"pages": [{'title': 'About', 'text': '\n 個人倉儲 \xa0/  YouTube \xa0/  Fossil \n \n stage1-bg9 \n 主題:機車空力套件 \n 40823201  網站 / 倉儲 \n 40823217  網站 / 倉儲 \n 小組  網站 / 倉儲 \n Stage2-bg11 \n 主題:免彎腰販賣機 \n 40823201  網站 / 倉儲 \n 40823209   網站 / 倉儲 \n 40823210  網站 / 倉儲 \n 40823217  網站 / 倉儲 \n 小組  網站 / 倉儲 \n Stage3-bg2 \n 40823217 / 40823217 \n 40823201 / 40823201 \n 40823209 / 40823209 \n 40823210 / 40823210 \xa0 \n 40823206 / 40823206 \n 40823207 / 40823207 \n 40823223 / 40823223 \n 40823224 / 40823224 \n 小組 \xa0 網站 /倉儲 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Stage1-bg9', 'text': '', 'tags': '', 'url': 'Stage1-bg9.html'}, {'title': 'W1-討論主題', 'text': '標題: \xa0 2021-協同產品設計實習-stage1-bg9 \n 專題題目: 機車的空力套件(如下圖) \n 用途:減少風阻、利於行駛時穩定車身 \n 第一位組員:40823201 \n 第二位組員:40823217 \n \xa0 \n', 'tags': '', 'url': 'W1-討論主題.html'}, {'title': 'W2-繪製', 'text': '\n 初步草稿 \n 構想：40823217 \n 繪圖：40823201 \n \n \n \n \n \n', 'tags': '', 'url': 'W2-繪製.html'}, {'title': 'W3-修改', 'text': '\n \n 1.新增圓角邊緣，使線條更加流暢 \n 2.新增孔洞 \n \n \n \n \n \n', 'tags': '', 'url': 'W3-修改.html'}, {'title': 'W4-報告', 'text': 'PDF \n \n', 'tags': '', 'url': 'W4-報告.html'}, {'title': 'Stage2-bg11', 'text': '', 'tags': '', 'url': 'Stage2-bg11.html'}, {'title': 'W6-討論主題', 'text': '\n Stage2-bg11 \n 小組倉儲 / 小組網站 \n 40823201/40823209/40823210/40823217 \n 分工 \n 繪圖&模擬 40823201/40823210 \n 倉儲 40823209/40823217 \n 專題主題:免彎腰販賣機 \n 動機: \n 考慮到一些老人、行動不便者及受傷的人無法彎腰拿取物品，所以我們將商品出口設置在右側中間。當我們買完商品時，商品即會掉落於斜面，且滾動至右側平台，而當平台偵測到重量，平台就會上升至出口處，購買者即可不必彎腰就可以拿去商品。 \n 示意圖 \n \n', 'tags': '', 'url': 'W6-討論主題.html'}, {'title': 'W7-繪製', 'text': '繪圖者:40823210 \n 依照討論結果建出圖 \n 第一版- download \n 本體 \n \n 玻璃窗 \n \n 蓋 \n \n 上軌道 \n \n 下軌道 \n \n 鎖點支架 \n \n 上滑軌輪 \n \n 置物架 \n \n 螺旋鉤子 \n \n 滾筒 \n \n 位移平台 \n \n 短蜗桿 \n \n 長蜗桿 \n \n 蜗桿支架 \n \n 蜗桿滑塊 \n \n 取物窗 \n \n 組合圖 \n \n 長蜗桿細節圖 \n \n 滾筒細節圖 \n \n', 'tags': '', 'url': 'W7-繪製.html'}, {'title': 'W8-模擬', 'text': '4/9~4/11模擬測試 \n 第一版 \n 第一次模擬 \n 一開始因為未與齒輪做連結而導致無法協調 \n \n 第二次模擬 \n 雖然與齒輪做連結了，因為齒輪無法帶動板子上升 \n 而導致破圖，使板子上升到齒輪上面 \n \n 第三次模擬 \n 矢板子與齒輪做連結後，雖然可以透過旋轉尺齒輪來使 \n 板子上升，但與螺桿的配合還是怪怪的，然後無法上升 \n 到指定高度。之後我們將下方滾輪也讓它旋轉，使商品 \n 能滾進平台。還有上方的彈簧，讓它旋轉使商品能掉落 \n 至滾輪處。 \n \n', 'tags': '', 'url': 'W8-模擬.html'}, {'title': 'W9-報告', 'text': 'PDF \n \n', 'tags': '', 'url': 'W9-報告.html'}, {'title': 'Stage3-bg2', 'text': '', 'tags': '', 'url': 'Stage3-bg2.html'}, {'title': 'W9', 'text': '1.學會如何使用ipv4。 \n 2.利用老師給的分組名單，用程式推導出每個小組的網頁跟倉儲 \n 還有每個組員的倉儲。 \n 3.利用ipv4的[remote API]來進行遠端的操控 coppeliasim \n', 'tags': '', 'url': 'W9.html'}, {'title': 'ipv4操作', 'text': '打開網路介面卡 \n \n 選擇當前使用的網路(插網路線選擇乙太網路，連接WIFI則是選擇WIFI) \n \n 選擇IPv4->內容 \n \n 輸入IP位址 \n \n 打開黑窗輸入 ipconfig /all \n \n 找出網路的IP並確認有沒有連到 \n \n 輸入指令 \n \n 確認是否連線成功 \n \n 進到 mde.tw 下載4.2.0版的 coppeliasim 和 vrep.remoteApi \n \n \n', 'tags': '', 'url': 'ipv4操作.html'}, {'title': 'W10-討論主題', 'text': '\n \n 經小組成員討論後，決定主題延續Stage2-bg11的免彎腰販賣機。 \n 分配任務 \n 程序編寫:40823224 \n 模擬:4082310/40823217 \n 繪圖:40823206/40823223/40823207 \n 網頁製作:40823209/40823201 \n ECE的Vending machine 設計與模擬 \n \n', 'tags': '', 'url': 'W10-討論主題.html'}, {'title': 'bg2-W10進度', 'text': '模擬:40823210、40823217 ； 日期:04/30 \n 目前利用coppeliasim模擬商品掉落情形，但商品會因為螺旋轉動而倒向一邊，不盡理想，下次改善重點。 \n', 'tags': '', 'url': 'bg2-W10進度.html'}, {'title': 'W11-OBS', 'text': 'OBS下載 \n 找到下載好的OBSPortable資料夾 \n \n App>obs-studio>bin>64bit 找到 \xa0 obs64.exe \xa0 並且打開他 \n \n 一開始會發現是黑屏 \n 在右下角找到來源>+>顯示器擷取 \n \n 確定 \n \n 進到設定>串流 \n \n 將服務及伺服器改為YouTube \n \n 到YouTube直播頁面(需24小時前開起權限) \n 在下方找到串流金鑰並複製 \n \n 回到OBS設定 \n 將剛複製的串流金鑰貼上 \n \n 到YouTube確認是否串流成功即可開始直播 \n \n \n', 'tags': '', 'url': 'W11-OBS.html'}, {'title': 'bg2-W11進度', 'text': '模擬:40823210、40823217 ； 日期:05/07 \n 此次利用coppeliasim模擬商品掉落情形，既上禮拜經驗，本次增加了2跟檔桿，但增加檔桿後似乎與螺旋勾子有砰撞上面的問題...。 \n \n 模擬:40823210、40823217 ； 日期:05/07 \n 既上面模擬修改後，改善了檔桿與螺旋勾子的碰撞問題，並移動了位子；且將商品稍微放大並讓商品貼齊置物架，使商品在移動過程中穩定一些。 \n', 'tags': '', 'url': 'bg2-W11進度.html'}, {'title': 'W12-直播', 'text': '直播人員:40823201，40823207 \n 直播內容:解決PULL及PUSH問題 \n \n', 'tags': '', 'url': 'W12-直播.html'}, {'title': 'bg2-W12進度', 'text': '模擬:40823210、40823217 ； 日期:05/14 \n 已修改完畢，剩一些小細節需要去修正，例如:碰撞上的問題、以 \n 及一些速度的變化要調整 外。其他的沒什麼大礙了，程式碼也幾乎沒有問題。(然後因 \n 為我電腦超級無敵的卡所以才呈現的一禎一禎的。) \n', 'tags': '', 'url': 'bg2-W12進度.html'}, {'title': 'task2-RemoteApi', 'text': '下載好 4.2.0版的 coppeliasim 和 vrep.remoteApi 後 \n 在資料夾中找到coppeliasim.exe並且打開coppeliasim \n \n 在檔案中找到下載好的vrep_remoteapi_ex \n 並在資料夾中找到2w1a.py，在SciTE(小白板)中打開 \n 更改IP位址(192.168.192.122)和使用者ID(ClientID)，名稱可以自取 \n 將import vrep改成import sim as vrep \n \n \n \n 在File中打開檔案2w1a.ttt \n \n', 'tags': '', 'url': 'task2-RemoteApi.html'}, {'title': 'W13-遠距討論', 'text': '"小組遠距討論" \n \n', 'tags': '', 'url': 'W13-遠距討論.html'}, {'title': 'bg2-W13進度', 'text': '模擬:40823210、40823217 ； 日期:05/21 \n 此次利用coppeliasim模擬整體免彎腰販賣機，既上禮拜經驗，重新定義了各個碰撞&動態設定，也調整了各物體轉速度，為了使其整體穩定一點，雖有好轉，但仍然需再多加微調；問題較大的地方是在於"00:57"平台要上升時，有二物件會產生分開的情況，有待下次改善...。 \n (按鍵指令) \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n \n \n \n 1~9..........控制螺旋鉤子 \n "空白建".....停止螺旋鉤子 \n C............控制開門 \n V............暫停關門 \n O............控制滾輪 \n W............平台上升 \n E............暫停平台 \n S............下降平台 \n esc..........結束 \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'bg2-W13進度.html'}, {'title': 'W14-W15', 'text': '利用RemoteApi操控Stage1至Stage3 三階段的產品。 \n Stage1-bg9 \n 產品為靜態，故沒法模擬 \n 專題題目: 機車的空力套件(如下圖) \n 用途:減少風阻、利於行駛時穩定車身 \n 40823201/40823217 \n \n Stage2-bg11  &  Stage3-bg2 \n \n 專題題目: 免彎腰販賣機 \n 設計動機 :思考到一些老人、行動不便者、受傷的人可能無法彎腰 \n 去拿取物品， 所以我們將商品出口設置在右側中間。當我們買完 \n 商品時，商品即會掉落於斜面， 且滾動至右側平台，而當平台偵 \n 測到重量，平台就會上升至出口處， 購買者即可不必彎腰就可以 \n 拿去商品。 \n', 'tags': '', 'url': 'W14-W15.html'}, {'title': 'bg2-W14&W15進度', 'text': '模擬:40823210、40823217 ； 日期:05/28 \n 此次利用coppeliasim模擬整體免彎腰販賣機，既上禮拜經驗，透過對部分零件進行選擇性的分解&組合和Joint的功能，解決了過往平台要上升時，會有二物件產生分開的情況；此外也發現coppeliasim在分解STL檔案組合模型時，零件會分解的不盡理想，此次也改善了零件分解過多的問題；最後對於販賣機的門在進行分解後依然是保持一體的，導致取物口的窗戶無法開啟，目前正在想辦法解決...。 \n (按鍵指令) \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n \n \n \n 1~9..........控制螺旋鉤子 \n "空白建".....停止螺旋鉤子 \n C............關門 \n V............暫停開/關門 \n B............開門 \n O............滾輪 \n W............平台上升 \n E............平台暫停 \n S............平台下降 \n esc..........結束 \n \n \n \n \n \n \n \n \n 模擬:40823210、40823217 ； 日期:05/30 \n 此次利用coppeliasim模擬整體免彎腰販賣機，既上禮拜經驗，對於販賣機的門無法分解，這次將舊有的門刪除並用inventor重新進行編輯組合，轉為stl檔後再輸入進coppeliasim進行分解，並對取物口設置按鍵指令，使取物口也可利用鍵盤按鍵進行控制。 \n (按鍵指令) \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n \n \n \n 1~9..........控制螺旋鉤子 \n "空白建".....停止螺旋鉤子 \n Z............關門 \n X............暫停開/關門 \n C............開門 \n O............滾輪 \n W............平台上升 \n E............平台暫停 \n S............平台下降 \n B............取物口開啟 \n N............取物口暫停 \n M............取物口關閉 \n esc..........結束 \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'bg2-W14&W15進度.html'}, {'title': 'task3-RoboDK', 'text': '利用RemoteApi操控六軸機器人 \n 操作者：40823201 \n \n \n 先下載 RoboDK 5.2.2 可攜程式 及 Pick and Place 檔案 \n \n 下載完解壓縮至隨身碟 \n \n 執行RoboDK.exe \n \n \n 文件->打開->點選pick_and_place_with_python.rdk \n \n 然後打開SciTE並將pick_and_place.py拖拉至 SciTE \n \n 打開顯示數字行列，並找到第78行 \n (robodk_path指 RoboDK.exe的路徑 ) \n (robodk_ip指API的IP位置) \n \n *找IP \n 回到 RoboDK點選工具列最底層的選項 \n \n 其他->勾選"允許外部API"->點選"API服務器IP" \n \n 選取IP輸入下方欄位並複製->OK->回到 SciTE貼上 \n \n *找 RoboDK路徑 \n 找到RoboDK.exe位置 \n \n 複製上方路徑並回到 SciTE貼上 \n \n 回到RoboDK->工具->選項->Python \n \n 回到 SciTE->Tools->Go \n 將右方欄位的藍色路徑複製，並在RoboDK中貼上(綠色線框選處)->確定 \n \n 左側上方的Pick and Place點擊左鍵->編輯Python程序 即可作動 \n \n', 'tags': '', 'url': 'task3-RoboDK.html'}, {'title': 'RemoteApi影片', 'text': '\n', 'tags': '', 'url': 'RemoteApi影片.html'}, {'title': 'W16', 'text': '所有檔案皆可在 W16 中下載 \n 40823214教學 \n 1.利用 Onshape 繪製MTB_Robot的零組件 \n 零件繪製 \xa0/  零件下載 \n \n \n ------------------------------------------------------------------------------------------------------- \n 2.建立CoppeliaSim 4.1.0 MTB robot 場景&末端加入Force sensor及suction pad \n 將繪製好的零件匯入CoppeliaSim中，完成軸的連接以及零件之間的子母關係。 \n 檔案下載 \n \n ------------------------------------------------------------------------------------------------------- \n 3.逆向運動學函式 \n 迴圈檔案下載 \n \n function moving(x,y)\n   a=0.4\n   b=0.4\n   c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\n   s=(a+b+c)/2\n   area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\n   h=area/(2*c)\n   deg1_base=math.atan(x/y)\n   if x<0 and y<0 then\n       deg1_base=deg1_base+math.pi\n   end\n   deg1_tri=math.asin(h/a)\n   deg1=deg1_base+deg1_tri\n   deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\n   deg3=deg2-deg1\n   sim.setJointTargetPosition(joint01,deg1)\n   sim.setJointTargetPosition(joint02,-deg2)\n   sim.setJointTargetPosition(joint03,deg3)\nend\n\n\nfunction sysCall_threadmain()\n    joint01=sim.getObjectHandle(\'joint1\')   //定義軸的名稱\n    joint02=sim.getObjectHandle(\'joint2\')\n    joint03=sim.getObjectHandle(\'joint3\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    sim.setJointTargetPosition(joint01,0)   //定義軸的初始位置\n    sim.setJointTargetPosition(joint02,0)\n    sim.setJointTargetPosition(joint03,0)\n    sim.setJointTargetPosition(jointz,0)\n    sim.setIntegerSignal("pad_switch",1)   //給吸盤高電位\n    sim.setJointTargetPosition(jointz,-0.04)   //移動至-0.4\n    sim.wait(3)   //等待3秒\n    sim.setJointTargetPosition(jointz,0)   //回到初始位置\n    while sim.getSimulationState()~=sim.simulation_advancing_adouttostopre do\n        moving(0.2,0.7)   //移動至(0.2,0.7)\n        sim.wait(3)\n        sim.setIntegerSignal("pad_switch",0)   //給吸盤低電位\n        sim.wait(3)\n        sim.setIntegerSignal("pad_switch",1)\n        sim.setJointTargetPosition(jointz,-0.04)\n        sim.wait(3)\n        sim.setJointTargetPosition(jointz,0)\n        sim.wait(3)\n        moving(-0.3,-0.55)   //移動至(-0.3,-0.55)\n        sim.wait(3)\n        sim.setIntegerSignal("pad_switch",0)\n        sim.wait(3)\n        sim.setIntegerSignal("pad_switch",1)\n        sim.setJointTargetPosition(jointz,-0.04)\n        sim.wait(3)\n        sim.setJointTargetPosition(jointz,0)\n        sim.wait(3)\n    end\nend \n \n ------------------------------------------------------------------------------------------------------- \n 4.利用RemoteApi控制機械手臂 \n RemoteApi下載 \n \n \n import sim as vrep\nimport math\nimport random\nimport time\nimport math\n\ndef moving(x,y):\na=0.4\nb=0.4\nc=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\ns=(a+b+c)/2\narea=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\nh=area/(2*c)\ndeg1_base=math.atan(x/y)\nif x<0 and y<0 :\ndeg1_base=deg1_base+math.pi\ndeg1_tri=math.asin(h/a)\ndeg1=deg1_base+deg1_tri\ndeg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\ndeg3=deg2-deg1\nvrep.simxSetJointTargetPosition(clientID,joint01,deg1,opmode)\nvrep.simxSetJointTargetPosition(clientID,joint02,-deg2,opmode)\nvrep.simxSetJointTargetPosition(clientID,joint03, deg3,opmode)\nprint (\'Start\')\n\nvrep.simxFinish(-1)\n\nclientID = vrep.simxStart(\'127.0.0.1\', 19997, True, True, 5000, 5)\n\nif clientID != -1:\nprint (\'Connected to remote API server\')\n\nres = vrep.simxAddStatusbarMessage(\nclientID, "40823201 ",\nvrep.simx_opmode_oneshot)\nif res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\nprint("Could not add a message to the status bar.")\n\n\nopmode = vrep.simx_opmode_oneshot_wait\nSTREAMING = vrep.simx_opmode_streaming\n\n\nvrep.simxStartSimulation(clientID, opmode)\nret,joint01=vrep.simxGetObjectHandle(clientID,"joint1",opmode)\nret,joint02=vrep.simxGetObjectHandle(clientID,"joint2",opmode)\nret,joint03=vrep.simxGetObjectHandle(clientID,"joint3",opmode)\nret,jointz=vrep.simxGetObjectHandle(clientID,"jointz",opmode)\n\nvrep.simxSetJointTargetPosition(clientID,joint01,0,opmode)\nvrep.simxSetJointTargetPosition(clientID,joint02,0,opmode)\nvrep.simxSetJointTargetPosition(clientID,joint03,0,opmode)\nvrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\nvrep.simxSetJointTargetPosition(clientID,jointz,-0.04,opmode)\ntime.sleep(1)\nvrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\nwhile True:\nmoving(0.2,0.7)\ntime.sleep(1)\nvrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)\ntime.sleep(1)\nvrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\nvrep.simxSetJointTargetPosition(clientID,jointz,-0.04,opmode)\ntime.sleep(1)\nvrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\nmoving(-0.3,-0.55)\ntime.sleep(1)\nvrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)\ntime.sleep(1)\nvrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\nvrep.simxSetJointTargetPosition(clientID,jointz,-0.04,opmode)\ntime.sleep(1)\nvrep.simxSetJointTargetPosition(clientID,jointz,0,opmode) \n ------------------------------------------------------------------------------------------------------- \n 5.利用keyboard操控機械手臂 \n 鍵盤檔案下載 \n 按鍵代碼 由40823214同學提供 \n \n function sysCall_init()\n    joint01=sim.getObjectHandle(\'joint1\')\n    joint02=sim.getObjectHandle(\'joint2\')\n    joint03=sim.getObjectHandle(\'joint3\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    sim.setJointTargetPosition(joint01,0)   //定義軸的名稱\n    sim.setJointTargetPosition(joint02,0)\n    sim.setJointTargetPosition(joint03,0)\n    sim.setJointTargetPosition(jointz,0)\n    deg1=0   //定義初始角度為0\n    deg2=0\n    zhing=false\n    pad=false\nend\n \nfunction sysCall_actuation()\n     message,auxiliaryData=sim.getSimulatorMessage()\n    while message~=-1 do\n        if (message==sim.message_keypress) then\n            if (auxiliaryData[1]==119) then   //W=119\n            deg1=deg1+1\n            sim.setJointTargetPosition(joint01,deg1*math.pi/180)   //將角度換算成徑度\n            end\n            if (auxiliaryData[1]==115) then   //S=115\n            deg1=deg1-1   //角度縮小\n            sim.setJointTargetPosition(joint01,deg1*math.pi/180)\n            end\n            if (auxiliaryData[1]==97) then   //A=97\n            deg2=deg2+1   //角度加大\n            sim.setJointTargetPosition(joint02,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==100) then   //D=100\n            deg2=deg2-1\n            sim.setJointTargetPosition(joint02,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==2008) then   //方向鍵-下=2008\n                sim.setJointTargetPosition(jointz,-0.4)   //使吸盤至-0.4\n                sim.setIntegerSignal("pad_switch",1)   //給吸盤高電位\n            end\n            if (auxiliaryData[1]==2007) then   //方向鍵-上=2007\n                sim.setJointTargetPosition(jointz,0)   //使吸盤至0\n                sim.setIntegerSignal("pad_switch",1)\n            end\n            if (auxiliaryData[1]==32) then   //Tab=32\n                sim.setIntegerSignal("pad_switch",0)   //給吸盤低電位\n            end\n            sim.setJointTargetPosition(joint03,(deg2-deg1)*math.pi/180)\n        end\n    message,auxiliaryData=sim.getSimulatorMessage()\n    end\nend \n ------------------------------------------------------------------------------------------------------- \n 心得： \n 這次的期末作業讓我確實的接觸到了CoppeliaSim，因為在這之前，模擬的部分都不是我負責的，頂多使用RemoteApi操控作業，所以都不能了解 CoppeliaSim 的操作，不過經過這次，我也了解到為什麼大家都說用完 CoppeliaSim後發現英文的重要性，很感謝之前有認真學英文的我，在首次接觸到CoppeliaSim的情況下，沒什麼困難(還是有些沒看過的單詞，但是會去查) ，除了字太小以外...這學期首先要感謝的不外乎是老師的指導，也很感謝40823217(從Stage1到Stage3都跟我一組的組長)願意幫助我及指導我，以及40823210同學願意讓我把我高中的小願望當成主題，更精緻更完善的畫出來，還有感謝40823214同學的影片指導，讓我在程式方面較為熟悉。祝大家平平安安，去去疫情走！', 'tags': '', 'url': 'W16.html'}, {'title': 'gogs及Fossil建立', 'text': '利用 gogs 及fossilapp來解決Github帳號被flagged的問題。 \n 個人fossil網頁 \n 先進到註冊頁面 \n \n 用戶名稱可以打學號 \n 信箱也可以使用學校信箱 \n \n 註冊完會繼確認函至剛剛填寫的信箱 \n 進到郵件點擊網址後，就會到登入頁面 \n \n 按+ ->新增儲存庫 \n \n 倉儲名稱需要與github的倉儲名稱相同 \n \n 將紅色底線標示的那行複製SciTE(或是記事本也可) \n \n 將"origin"改寫為任何一個代號(建議用學號) \n (這裡與推小組倉儲是一樣的概念) \n \n 改寫後複製貼上至黑窗->ENTER \n \n 至fossil頁面檢查 \n \n 試推一次，在正常git push完，需要再一次git push ____後面接剛剛改寫的代號 \n 與正常提交推送一樣的畫面，就代表成功 \n \n', 'tags': '', 'url': 'gogs及Fossil建立.html'}, {'title': 'Onshape建立', 'text': 'Onshape註冊 \n 進入註冊頁面 \n 點擊申請試用 \n \n 選擇所在國家-台灣 \n \n 選擇學生免費方案 \n \n 建立新帳號 \n \n 輸入個人資料 \n \n 輸入學校資料後即完成註冊 \n', 'tags': '', 'url': 'Onshape建立.html'}, {'title': 'Problems&Notes', 'text': '', 'tags': '', 'url': 'Problems&Notes.html'}, {'title': '404', 'text': '將標題名稱改成大寫後 就解決了 \n \n \n', 'tags': '', 'url': '404.html'}, {'title': '無法Push', 'text': '\n 拉下最新版本後，需經過修改後再上傳即可。 \n (在 W12 有 直播 說明)', 'tags': '', 'url': '無法Push.html'}, {'title': 'Site Title', 'text': '', 'tags': '', 'url': 'Site Title.html'}, {'title': 'w5', 'text': '\n .', 'tags': '', 'url': 'w5.html'}]};